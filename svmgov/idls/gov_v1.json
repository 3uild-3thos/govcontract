{
  "address": "Dx6SGfGoXipHA4bmtGxZ6DQXztRoKmuX6fx3EMouigHX",
  "metadata": {
    "name": "gov_v1",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "cast_vote",
      "discriminator": [
        20,
        212,
        15,
        189,
        69,
        180,
        69,
        151
      ],
      "accounts": [
        {
          "name": "operator",
          "signer": true
        },
        {
          "name": "ballot_box",
          "writable": true
        },
        {
          "name": "program_config"
        }
      ],
      "args": [
        {
          "name": "ballot",
          "type": {
            "defined": {
              "name": "Ballot"
            }
          }
        }
      ]
    },
    {
      "name": "close_meta_merkle_proof",
      "discriminator": [
        248,
        239,
        182,
        146,
        23,
        215,
        172,
        3
      ],
      "accounts": [
        {
          "name": "payer",
          "docs": [
            "Account to receive the reclaimed rent from StakingRecord"
          ],
          "writable": true,
          "relations": [
            "meta_merkle_proof"
          ]
        },
        {
          "name": "meta_merkle_proof",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "finalize_ballot",
      "discriminator": [
        212,
        43,
        85,
        58,
        158,
        34,
        41,
        42
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "ballot_box"
        },
        {
          "name": "consensus_result",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  67,
                  111,
                  110,
                  115,
                  101,
                  110,
                  115,
                  117,
                  115,
                  82,
                  101,
                  115,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "ballot_box.ballot_id",
                "account": "BallotBox"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "init_ballot_box",
      "discriminator": [
        164,
        20,
        45,
        213,
        67,
        43,
        193,
        212
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "operator",
          "signer": true
        },
        {
          "name": "ballot_box",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  66,
                  97,
                  108,
                  108,
                  111,
                  116,
                  66,
                  111,
                  120
                ]
              },
              {
                "kind": "account",
                "path": "program_config.next_ballot_id",
                "account": "ProgramConfig"
              }
            ]
          }
        },
        {
          "name": "program_config",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "init_meta_merkle_proof",
      "discriminator": [
        190,
        210,
        132,
        165,
        204,
        88,
        110,
        84
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "merkle_proof",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  77,
                  101,
                  116,
                  97,
                  77,
                  101,
                  114,
                  107,
                  108,
                  101,
                  80,
                  114,
                  111,
                  111,
                  102
                ]
              },
              {
                "kind": "account",
                "path": "consensus_result"
              },
              {
                "kind": "arg",
                "path": "meta_merkle_leaf.vote_account"
              }
            ]
          }
        },
        {
          "name": "consensus_result"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "meta_merkle_leaf",
          "type": {
            "defined": {
              "name": "MetaMerkleLeaf"
            }
          }
        },
        {
          "name": "meta_merkle_proof",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        },
        {
          "name": "close_timestamp",
          "type": "i64"
        }
      ]
    },
    {
      "name": "init_program_config",
      "discriminator": [
        185,
        54,
        237,
        229,
        219,
        179,
        109,
        20
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "authority",
          "signer": true
        },
        {
          "name": "program_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  80,
                  114,
                  111,
                  103,
                  114,
                  97,
                  109,
                  67,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "remove_vote",
      "discriminator": [
        32,
        187,
        23,
        3,
        156,
        232,
        55,
        177
      ],
      "accounts": [
        {
          "name": "operator",
          "signer": true
        },
        {
          "name": "ballot_box",
          "writable": true
        },
        {
          "name": "program_config"
        }
      ],
      "args": []
    },
    {
      "name": "set_tie_breaker",
      "discriminator": [
        228,
        10,
        240,
        130,
        193,
        58,
        103,
        181
      ],
      "accounts": [
        {
          "name": "tie_breaker_admin",
          "signer": true,
          "relations": [
            "program_config"
          ]
        },
        {
          "name": "ballot_box",
          "writable": true
        },
        {
          "name": "program_config"
        }
      ],
      "args": [
        {
          "name": "ballot_index",
          "type": "u8"
        }
      ]
    },
    {
      "name": "update_operator_whitelist",
      "discriminator": [
        25,
        65,
        144,
        150,
        200,
        245,
        156,
        92
      ],
      "accounts": [
        {
          "name": "authority",
          "signer": true,
          "relations": [
            "program_config"
          ]
        },
        {
          "name": "program_config",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "operators_to_add",
          "type": {
            "option": {
              "vec": "pubkey"
            }
          }
        },
        {
          "name": "operators_to_remove",
          "type": {
            "option": {
              "vec": "pubkey"
            }
          }
        }
      ]
    },
    {
      "name": "update_program_config",
      "discriminator": [
        214,
        3,
        187,
        98,
        170,
        106,
        33,
        45
      ],
      "accounts": [
        {
          "name": "authority",
          "signer": true,
          "relations": [
            "program_config"
          ]
        },
        {
          "name": "program_config",
          "writable": true
        },
        {
          "name": "new_authority",
          "signer": true,
          "optional": true
        }
      ],
      "args": [
        {
          "name": "min_consensus_threshold_bps",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "tie_breaker_admin",
          "type": {
            "option": "pubkey"
          }
        },
        {
          "name": "vote_duration",
          "type": {
            "option": "i64"
          }
        }
      ]
    },
    {
      "name": "verify_merkle_proof",
      "discriminator": [
        51,
        191,
        37,
        169,
        74,
        207,
        201,
        102
      ],
      "accounts": [
        {
          "name": "meta_merkle_proof"
        },
        {
          "name": "consensus_result",
          "relations": [
            "meta_merkle_proof"
          ]
        }
      ],
      "args": [
        {
          "name": "stake_merkle_proof",
          "type": {
            "option": {
              "vec": {
                "array": [
                  "u8",
                  32
                ]
              }
            }
          }
        },
        {
          "name": "stake_merkle_leaf",
          "type": {
            "option": {
              "defined": {
                "name": "StakeMerkleLeaf"
              }
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "BallotBox",
      "discriminator": [
        155,
        169,
        156,
        8,
        92,
        14,
        24,
        101
      ]
    },
    {
      "name": "ConsensusResult",
      "discriminator": [
        105,
        121,
        122,
        243,
        100,
        58,
        93,
        161
      ]
    },
    {
      "name": "MetaMerkleProof",
      "discriminator": [
        130,
        55,
        141,
        26,
        195,
        58,
        18,
        178
      ]
    },
    {
      "name": "ProgramConfig",
      "discriminator": [
        196,
        210,
        90,
        231,
        144,
        149,
        140,
        63
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "OperatorNotWhitelisted",
      "msg": "Operator not whitelisted"
    },
    {
      "code": 6001,
      "name": "OperatorHasVoted",
      "msg": "Operator has voted"
    },
    {
      "code": 6002,
      "name": "OperatorHasNotVoted",
      "msg": "Operator has not voted"
    },
    {
      "code": 6003,
      "name": "VotingExpired",
      "msg": "Voting has expired"
    },
    {
      "code": 6004,
      "name": "VotingNotExpired",
      "msg": "Voting not expired"
    },
    {
      "code": 6005,
      "name": "ConsensusReached",
      "msg": "Consensus has reached"
    },
    {
      "code": 6006,
      "name": "ConsensusNotReached",
      "msg": "Consensus not reached"
    },
    {
      "code": 6007,
      "name": "InvalidBallot",
      "msg": "Invalid ballot"
    },
    {
      "code": 6008,
      "name": "InvalidMerkleInputs",
      "msg": "Invalid merkle inputs"
    },
    {
      "code": 6009,
      "name": "InvalidMerkleProof",
      "msg": "Invalid merkle proof"
    }
  ],
  "types": [
    {
      "name": "Ballot",
      "docs": [
        "Inner struct of BallotBox"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "meta_merkle_root",
            "docs": [
              "The merkle root of the meta merkle tree"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "snapshot_hash",
            "docs": [
              "SHA256 hash of borsh serialized snapshot. Optional."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "BallotBox",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ballot_id",
            "docs": [
              "ID"
            ],
            "type": "u64"
          },
          {
            "name": "bump",
            "docs": [
              "Bump seed for the PDA"
            ],
            "type": "u8"
          },
          {
            "name": "epoch",
            "docs": [
              "The epoch this ballot box is for"
            ],
            "type": "u64"
          },
          {
            "name": "slot_created",
            "docs": [
              "Slot when this ballot box was created"
            ],
            "type": "u64"
          },
          {
            "name": "slot_consensus_reached",
            "docs": [
              "Slot when consensus was reached"
            ],
            "type": "u64"
          },
          {
            "name": "min_consensus_threshold_bps",
            "docs": [
              "Min. percentage of votes required to finalize for this ballot box."
            ],
            "type": "u16"
          },
          {
            "name": "winning_ballot",
            "docs": [
              "The ballot that got at least min_consensus_threshold of votes"
            ],
            "type": {
              "defined": {
                "name": "Ballot"
              }
            }
          },
          {
            "name": "operator_votes",
            "docs": [
              "Operator votes"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "OperatorVote"
                }
              }
            }
          },
          {
            "name": "ballot_tallies",
            "docs": [
              "Mapping of ballots votes to stake weight"
            ],
            "type": {
              "vec": {
                "defined": {
                  "name": "BallotTally"
                }
              }
            }
          },
          {
            "name": "vote_expiry_timestamp",
            "docs": [
              "Timestamp when voting ends. Tie breaker admin will decide the results",
              "if no consensus is reached by then."
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BallotTally",
      "docs": [
        "Inner struct of BallotBox"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "index",
            "docs": [
              "Index of the tally within the ballot_tallies"
            ],
            "type": "u8"
          },
          {
            "name": "ballot",
            "docs": [
              "The ballot being tallied"
            ],
            "type": {
              "defined": {
                "name": "Ballot"
              }
            }
          },
          {
            "name": "tally",
            "docs": [
              "The number of votes for this ballot. Each vote is equally weighted."
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ConsensusResult",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ballot_id",
            "docs": [
              "Ballot ID"
            ],
            "type": "u64"
          },
          {
            "name": "ballot",
            "docs": [
              "Ballot"
            ],
            "type": {
              "defined": {
                "name": "Ballot"
              }
            }
          }
        ]
      }
    },
    {
      "name": "MetaMerkleLeaf",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "voting_wallet",
            "docs": [
              "Wallet designated for governance voting for the vote account."
            ],
            "type": "pubkey"
          },
          {
            "name": "vote_account",
            "docs": [
              "Validator's vote account."
            ],
            "type": "pubkey"
          },
          {
            "name": "stake_merkle_root",
            "docs": [
              "Root hash of the StakeMerkleTree, representing all active stake accounts",
              "delegated to the current vote account."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "active_stake",
            "docs": [
              "Total active delegated stake under this vote account."
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MetaMerkleProof",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "payer",
            "docs": [
              "Payer wallet"
            ],
            "type": "pubkey"
          },
          {
            "name": "consensus_result",
            "docs": [
              "ConsensusResult proof is created for."
            ],
            "type": "pubkey"
          },
          {
            "name": "meta_merkle_leaf",
            "docs": [
              "Meta merkle leaf"
            ],
            "type": {
              "defined": {
                "name": "MetaMerkleLeaf"
              }
            }
          },
          {
            "name": "meta_merkle_proof",
            "docs": [
              "Meta merkle proof"
            ],
            "type": {
              "vec": {
                "array": [
                  "u8",
                  32
                ]
              }
            }
          },
          {
            "name": "close_timestamp",
            "docs": [
              "Timestamp after which MetaMerkleProof can be closed permissionlessly.",
              "This is selected by the payer but our recommendation is to set to vote expiry time."
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OperatorVote",
      "docs": [
        "Inner struct of BallotBox"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "operator",
            "docs": [
              "The operator that cast the vote"
            ],
            "type": "pubkey"
          },
          {
            "name": "slot_voted",
            "docs": [
              "The slot the operator voted"
            ],
            "type": "u64"
          },
          {
            "name": "ballot_index",
            "docs": [
              "The index of the ballot in the ballot_tallies"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ProgramConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "Authority allowed to update the config."
            ],
            "type": "pubkey"
          },
          {
            "name": "whitelisted_operators",
            "docs": [
              "Operators whitelisted to participate in voting."
            ],
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "min_consensus_threshold_bps",
            "docs": [
              "Min. percentage of votes required to finalize a ballot. Used during BallotBox creation."
            ],
            "type": "u16"
          },
          {
            "name": "tie_breaker_admin",
            "docs": [
              "Admin allowed to decide the winning ballot if vote expires before consensus."
            ],
            "type": "pubkey"
          },
          {
            "name": "next_ballot_id",
            "docs": [
              "ID for next BallotBox"
            ],
            "type": "u64"
          },
          {
            "name": "vote_duration",
            "docs": [
              "Duration for which ballot box will be opened for voting."
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "StakeMerkleLeaf",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "voting_wallet",
            "docs": [
              "Wallet designated for governance voting for the stake account."
            ],
            "type": "pubkey"
          },
          {
            "name": "stake_account",
            "docs": [
              "The stake account address."
            ],
            "type": "pubkey"
          },
          {
            "name": "active_stake",
            "docs": [
              "Active delegated stake amount."
            ],
            "type": "u64"
          }
        ]
      }
    }
  ]
}